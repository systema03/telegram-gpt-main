from telegram.ext import Application, ContextTypes, MessageHandler, filters
from telegram import Update
from dotenv import load_dotenv
import os
import google.generativeai as genai
import asyncio
import time
import json

# Cargar variables de entorno
load_dotenv()
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")

# Configurar Gemini
genai.configure(api_key=GEMINI_API_KEY)
model = genai.GenerativeModel("gemini-1.5-flash")

# Cargar resoluciones JCE
def load_jce_resolutions():
    """Cargar resoluciones oficiales de la JCE"""
    resolutions = {}
    try:
        if os.path.exists("jce_resolutions.json"):
            with open("jce_resolutions.json", 'r', encoding='utf-8') as f:
                data = json.load(f)
                for category, category_resolutions in data.items():
                    if category != "fecha_actualizacion":
                        resolutions.update(category_resolutions)
        return resolutions
    except Exception as e:
        print(f"Error cargando resoluciones: {e}")
        return {}

# Cargar resoluciones al inicio
JCE_RESOLUTIONS = load_jce_resolutions()

# Diccionario para mantener historial por usuario
mensajes = {}

# Respuestas predefinidas para cuando Gemini no est√© disponible
RESPUESTAS_PREDEFINIDAS = {
    "acta_nacimiento": """üìã **Documentos para Acta de Nacimiento en RD:**

‚Ä¢ C√©dula de identidad del solicitante
‚Ä¢ Si es para un menor: c√©dula de los padres
‚Ä¢ Pago de la tasa correspondiente (RD$ 500-800)
‚Ä¢ Solicitud en formulario oficial de la JCE
‚Ä¢ Direcci√≥n: Oficina Central de la JCE, Santo Domingo

‚è∞ **Tiempo de entrega:** 3-5 d√≠as h√°biles

**Oficinas JCE:**
üìç Santo Domingo: Av. 27 de Febrero
üìç Santiago: Av. Estrella Sadhal√°
üìç La Romana: Av. Libertad
üìç San Pedro: Av. Independencia""",

    "cambio_nombre": """üîÑ **Cambio de Nombre en RD:**

**Requisitos:**
‚Ä¢ Solicitud formal con justificaci√≥n
‚Ä¢ Acta de nacimiento original
‚Ä¢ C√©dula de identidad
‚Ä¢ Certificado de buena conducta
‚Ä¢ Pago de tasas (RD$ 1,500-2,000)

**Proceso:**
1. Solicitud en JCE
2. Publicaci√≥n en peri√≥dico (3 veces)
3. Audiencia judicial
4. Resoluci√≥n final

‚è∞ **Duraci√≥n:** 3-6 meses

**Justificaciones v√°lidas:**
‚Ä¢ Error ortogr√°fico en el registro
‚Ä¢ Nombres ofensivos o rid√≠culos
‚Ä¢ Adopci√≥n
‚Ä¢ Matrimonio (apellido del c√≥nyuge)""",

    "naturalizacion": """üá©üá¥ **Naturalizaci√≥n en Rep√∫blica Dominicana:**

**Requisitos:**
‚Ä¢ Residencia legal por 2 a√±os
‚Ä¢ Acta de nacimiento apostillada
‚Ä¢ Certificado de buena conducta
‚Ä¢ Certificado m√©dico
‚Ä¢ Pago de tasas (RD$ 5,000-8,000)

**Documentos adicionales:**
‚Ä¢ Pasaporte vigente
‚Ä¢ Certificado de trabajo
‚Ä¢ Comprobante de domicilio

‚è∞ **Proceso:** 6-12 meses

**Tipos de naturalizaci√≥n:**
‚Ä¢ Por residencia (2 a√±os)
‚Ä¢ Por matrimonio (1 a√±o)
‚Ä¢ Por inversi√≥n (RD$ 200,000+)
‚Ä¢ Por nacimiento en RD""",

    "apostilla": """üìú **Apostilla en Rep√∫blica Dominicana:**

**¬øQu√© es?**
Certificaci√≥n internacional que valida documentos para uso en el extranjero.

**Documentos que requieren apostilla:**
‚Ä¢ Actas de nacimiento
‚Ä¢ Certificados de estudios
‚Ä¢ Documentos notariales
‚Ä¢ Certificados de buena conducta

**Proceso:**
1. Solicitud en Ministerio de Relaciones Exteriores
2. Pago de tasa (RD$ 300-500)
3. Entrega en 24-48 horas

üìç **Ubicaci√≥n:** Ministerio de Relaciones Exteriores, Santo Domingo

**Pa√≠ses que aceptan apostilla:**
‚Ä¢ Estados Unidos, Canad√°, M√©xico
‚Ä¢ Espa√±a, Francia, Alemania
‚Ä¢ Reino Unido, Italia, Portugal
‚Ä¢ Y otros 120+ pa√≠ses""",

    "cedula": """üÜî **C√©dula de Identidad en RD:**

**Primera vez:**
‚Ä¢ Acta de nacimiento
‚Ä¢ Certificado m√©dico
‚Ä¢ Pago de tasa (RD$ 400)
‚Ä¢ Foto reciente

**Renovaci√≥n:**
‚Ä¢ C√©dula anterior
‚Ä¢ Pago de tasa (RD$ 300)
‚Ä¢ Foto reciente

**P√©rdida/Robo:**
‚Ä¢ Denuncia policial
‚Ä¢ Pago de tasa (RD$ 500)
‚Ä¢ Foto reciente

‚è∞ **Entrega:** 15-30 d√≠as h√°biles

**Edad m√≠nima:** 16 a√±os
**Vigencia:** 10 a√±os""",

    "matrimonio": """üíí **Matrimonio Civil en RD:**

**Requisitos:**
‚Ä¢ Acta de nacimiento (ambos)
‚Ä¢ C√©dula de identidad (ambos)
‚Ä¢ Certificado de solter√≠a
‚Ä¢ Certificado m√©dico
‚Ä¢ Pago de tasas (RD$ 1,000-1,500)

**Documentos adicionales:**
‚Ä¢ Si es extranjero: pasaporte y certificado de solter√≠a apostillado
‚Ä¢ Si es divorciado: sentencia de divorcio
‚Ä¢ Si es viudo: acta de defunci√≥n del c√≥nyuge

**Proceso:**
1. Solicitud en JCE
2. Publicaci√≥n de edictos (15 d√≠as)
3. Celebraci√≥n del matrimonio
4. Entrega de acta

‚è∞ **Duraci√≥n total:** 3-4 semanas""",

    "divorcio": """üíî **Divorcio en Rep√∫blica Dominicana:**

**Tipos de divorcio:**
‚Ä¢ Divorcio por mutuo acuerdo
‚Ä¢ Divorcio por incompatibilidad
‚Ä¢ Divorcio por falta

**Requisitos:**
‚Ä¢ Acta de matrimonio
‚Ä¢ C√©dulas de identidad (ambos)
‚Ä¢ Acuerdo de divorcio (si aplica)
‚Ä¢ Pago de tasas (RD$ 2,000-4,000)

**Proceso:**
1. Solicitud en JCE
2. Audiencia de conciliaci√≥n
3. Sentencia de divorcio
4. Inscripci√≥n en registro civil

‚è∞ **Duraci√≥n:** 2-6 meses

**Documentos adicionales:**
‚Ä¢ Acuerdo sobre custodia (si hay hijos)
‚Ä¢ Acuerdo sobre bienes
‚Ä¢ Certificado de buena conducta""",

    "adopcion": """üë∂ **Adopci√≥n en Rep√∫blica Dominicana:**

**Requisitos para adoptantes:**
‚Ä¢ Ser mayor de 25 a√±os
‚Ä¢ Tener al menos 15 a√±os m√°s que el adoptado
‚Ä¢ Certificado de idoneidad
‚Ä¢ Estabilidad econ√≥mica y emocional

**Documentos necesarios:**
‚Ä¢ Solicitud formal
‚Ä¢ Certificado de idoneidad
‚Ä¢ Acta de nacimiento del adoptado
‚Ä¢ Sentencia de adopci√≥n
‚Ä¢ Pago de tasas (RD$ 3,000-5,000)

**Proceso:**
1. Solicitud inicial
2. Evaluaci√≥n psicol√≥gica y social
3. Audiencia judicial
4. Sentencia de adopci√≥n
5. Inscripci√≥n en registro civil

‚è∞ **Duraci√≥n:** 6-12 meses

**Tipos de adopci√≥n:**
‚Ä¢ Adopci√≥n simple
‚Ä¢ Adopci√≥n plena
‚Ä¢ Adopci√≥n internacional""",

    "defuncion": """‚ö∞Ô∏è **Acta de Defunci√≥n en RD:**

**Requisitos:**
‚Ä¢ Certificado m√©dico de defunci√≥n
‚Ä¢ C√©dula de identidad del fallecido
‚Ä¢ C√©dula de identidad del declarante
‚Ä¢ Pago de tasas (RD$ 300-500)

**Qui√©n puede declarar:**
‚Ä¢ Familiares directos
‚Ä¢ Autoridades m√©dicas
‚Ä¢ Autoridades policiales
‚Ä¢ Cualquier persona con conocimiento

**Proceso:**
1. Obtener certificado m√©dico
2. Solicitar acta en JCE
3. Pago de tasas
4. Entrega inmediata

‚è∞ **Tiempo:** 1-3 d√≠as h√°biles

**Documentos adicionales:**
‚Ä¢ Si es extranjero: pasaporte
‚Ä¢ Si es menor: acta de nacimiento
‚Ä¢ Si es por accidente: reporte policial""",

    "certificados": """üìú **Certificados en la JCE:**

**Tipos de certificados disponibles:**
‚Ä¢ Certificado de buena conducta
‚Ä¢ Certificado de solter√≠a
‚Ä¢ Certificado de nacionalidad
‚Ä¢ Certificado de residencia
‚Ä¢ Certificado de votaci√≥n

**Requisitos generales:**
‚Ä¢ C√©dula de identidad
‚Ä¢ Pago de tasas (RD$ 200-500)
‚Ä¢ Solicitud en formulario oficial

**Tiempos de entrega:**
‚Ä¢ Certificado de buena conducta: 3-5 d√≠as
‚Ä¢ Certificado de solter√≠a: 1-2 d√≠as
‚Ä¢ Certificado de nacionalidad: 5-7 d√≠as
‚Ä¢ Certificado de residencia: 2-3 d√≠as

**Oficinas donde solicitarlos:**
‚Ä¢ Cualquier oficina de la JCE
‚Ä¢ En l√≠nea (algunos certificados)
‚Ä¢ Por correo (certificados especiales)""",

    "general": """üèõÔ∏è **Junta Central Electoral (JCE) - Rep√∫blica Dominicana**

**Servicios principales:**
‚Ä¢ Actas de nacimiento, matrimonio, defunci√≥n
‚Ä¢ C√©dulas de identidad
‚Ä¢ Cambios de nombre
‚Ä¢ Naturalizaci√≥n
‚Ä¢ Certificados varios

**Contacto:**
üìû Tel: (809) 537-0100
üåê Web: www.jce.gob.do
üìç Direcci√≥n: Av. 27 de Febrero, Santo Domingo

**Horarios:**
Lunes a Viernes: 8:00 AM - 4:00 PM
S√°bados: 8:00 AM - 12:00 PM

**Oficinas principales:**
‚Ä¢ Santo Domingo (Central)
‚Ä¢ Santiago
‚Ä¢ La Romana
‚Ä¢ San Pedro de Macor√≠s
‚Ä¢ San Francisco de Macor√≠s
‚Ä¢ Barahona
‚Ä¢ Azua
‚Ä¢ San Juan de la Maguana"""
}

# Control de l√≠mites
ultima_llamada = 0
llamadas_por_minuto = 0

def obtener_respuesta_predefinida(texto):
    """Obtener respuesta predefinida basada en el texto del usuario"""
    texto_lower = texto.lower()
    
    # Primero buscar en resoluciones oficiales
    resolution_response = buscar_en_resoluciones(texto_lower)
    if resolution_response:
        return resolution_response
    
    # Si no hay resoluci√≥n espec√≠fica, usar respuestas predefinidas
    if any(palabra in texto_lower for palabra in ["acta", "nacimiento", "certificado", "partida"]):
        return RESPUESTAS_PREDEFINIDAS["acta_nacimiento"]
    elif any(palabra in texto_lower for palabra in ["cambio", "nombre", "modificar", "corregir", "apellido"]):
        return RESPUESTAS_PREDEFINIDAS["cambio_nombre"]
    elif any(palabra in texto_lower for palabra in ["naturalizacion", "nacionalidad", "ciudadania", "extranjero", "inmigrante"]):
        return RESPUESTAS_PREDEFINIDAS["naturalizacion"]
    elif any(palabra in texto_lower for palabra in ["apostilla", "internacional", "extranjero", "validar", "legalizar"]):
        return RESPUESTAS_PREDEFINIDAS["apostilla"]
    elif any(palabra in texto_lower for palabra in ["cedula", "identidad", "documento", "carnet"]):
        return RESPUESTAS_PREDEFINIDAS["cedula"]
    elif any(palabra in texto_lower for palabra in ["matrimonio", "casarse", "boda", "casamiento"]):
        return RESPUESTAS_PREDEFINIDAS["matrimonio"]
    elif any(palabra in texto_lower for palabra in ["divorcio", "separar", "separacion", "disolver"]):
        return RESPUESTAS_PREDEFINIDAS["divorcio"]
    elif any(palabra in texto_lower for palabra in ["adopcion", "adoptar", "hijo", "menor"]):
        return RESPUESTAS_PREDEFINIDAS["adopcion"]
    elif any(palabra in texto_lower for palabra in ["defuncion", "muerte", "fallecimiento", "fallecido"]):
        return RESPUESTAS_PREDEFINIDAS["defuncion"]
    elif any(palabra in texto_lower for palabra in ["certificado", "buena conducta", "solteria", "nacionalidad", "residencia"]):
        return RESPUESTAS_PREDEFINIDAS["certificados"]
    else:
        return RESPUESTAS_PREDEFINIDAS["general"]

def buscar_en_resoluciones(texto):
    """Buscar informaci√≥n en las resoluciones oficiales de la JCE"""
    for title, resolution in JCE_RESOLUTIONS.items():
        content = resolution.get("contenido", "").lower()
        processed = resolution.get("contenido_procesado", {})
        
        # Buscar coincidencias en el contenido
        if any(palabra in content for palabra in texto.split()):
            # Crear respuesta basada en la resoluci√≥n
            response = f"üìã **Informaci√≥n Oficial JCE**\n\n"
            response += f"**Resoluci√≥n:** {title}\n"
            
            if processed.get("numero_resolucion"):
                response += f"**N√∫mero:** {processed['numero_resolucion']}\n"
            
            if processed.get("fecha"):
                response += f"**Fecha:** {processed['fecha']}\n\n"
            
            # Agregar art√≠culos relevantes
            if processed.get("articulos"):
                response += "**Disposiciones relevantes:**\n"
                for article in processed["articulos"][:3]:
                    response += f"‚Ä¢ Art√≠culo {article['numero']}: {article['contenido']}\n"
                response += "\n"
            
            # Agregar informaci√≥n de aplicaci√≥n
            if processed.get("aplicacion"):
                response += "**Aplicaci√≥n:**\n"
                for app in processed["aplicacion"][:2]:
                    response += f"‚Ä¢ {app}\n"
                response += "\n"
            
            response += "‚ÑπÔ∏è *Esta informaci√≥n est√° basada en resoluciones oficiales de la JCE*"
            return response
    
    return None

# Guardar el mensaje del usuario
def handle_user_message(message):
    user_id = message.from_user.id
    if user_id not in mensajes:
        mensajes[user_id] = {
            "messages": [
                {
                    "role": "system",
                    "content": (
                        "Eres un asistente virtual especializado en Registro Civil de Rep√∫blica Dominicana. "
                        "Responde a los gestores usando resoluciones y reglas oficiales de la Junta Central Electoral."
                    )
                }
            ]
        }

    mensajes[user_id]["messages"].append({
        "role": "user",
        "content": message.text
    })

    # Limitar historial para evitar exceso
    mensajes[user_id]["messages"] = mensajes[user_id]["messages"][-20:]

# Generar respuesta con Gemini
async def generate_response(message):
    global ultima_llamada, llamadas_por_minuto
    
    # Control de l√≠mites
    tiempo_actual = time.time()
    if tiempo_actual - ultima_llamada < 60:  # Menos de 1 minuto
        llamadas_por_minuto += 1
        if llamadas_por_minuto > 10:  # L√≠mite conservador
            return obtener_respuesta_predefinida(message.text)
    else:
        llamadas_por_minuto = 1
        ultima_llamada = tiempo_actual

    user_id = message.from_user.id
    prompt = ""

    for msg in mensajes[user_id]["messages"]:
        if msg["role"] == "user":
            prompt += f"Usuario: {msg['content']}\n"
        elif msg["role"] == "assistant":
            prompt += f"Asistente: {msg['content']}\n"
        elif msg["role"] == "system":
            prompt = f"{msg['content']}\n\n" + prompt

    try:
        # Llamar a Gemini
        response = await asyncio.to_thread(model.generate_content, prompt)
        respuesta_texto = response.text.strip()

        # Guardar respuesta
        mensajes[user_id]["messages"].append({
            "role": "assistant",
            "content": respuesta_texto
        })

        return respuesta_texto
        
    except Exception as e:
        print(f"Error de Gemini: {e}")
        # Usar respuesta predefinida como respaldo
        return obtener_respuesta_predefinida(message.text)

# Manejar mensajes entrantes
async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        handle_user_message(update.message)
        response = await generate_response(update.message)
        await update.message.reply_text(response)
    except Exception as e:
        print("Error:", e)
        await update.message.reply_text("‚ö†Ô∏è Ocurri√≥ un error al procesar tu mensaje.")

# Funci√≥n principal
def main():
    bot = Application.builder().token(TELEGRAM_TOKEN).build()
    bot.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler))
    print("ü§ñ Bot ejecut√°ndose...")
    bot.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == "__main__":
    main()